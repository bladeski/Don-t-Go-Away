name: 🔧 Build and Test .NET Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: 🏗️ Build and Test
    runs-on: windows-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3

    - name: Decode PFX certificate
      shell: pwsh
      run: |
        [IO.File]::WriteAllBytes("cert.pfx", [Convert]::FromBase64String("${{ secrets.PFX_BASE64 }}"))

    - name: 🧰 Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: 📦 Restore dependencies with ReadyToRun
      run: dotnet restore /p:RuntimeIdentifier=win-x64 /p:PublishReadyToRun=true

    - name: 🏗️ Build project
      run: dotnet build --no-restore

    - name: 🧪 Run tests
      run: dotnet test --no-build --verbosity normal

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Build and sign MSIX
      shell: pwsh
      run: |
        & msbuild "Don't Go Away\Don't Go Away.csproj" `
          /p:Configuration=Release `
          /p:PlatformTarget=x64 `
          /p:RuntimeIdentifier=win-x64 `
          /p:GenerateMsixPackageOnBuild=true `
          /p:PackageCertificateKeyFile=cert.pfx `
          /p:PackageCertificatePassword='${{ secrets.PFX_PASSWORD }}' `
          /p:PublishDir="publish"

    - name: 🏷️ Create Git Tag
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag v1.0.${{ github.run_number }}
        git push origin v1.0.${{ github.run_number }}
      
    - name: 🚀 Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: github.ref == 'refs/heads/main'
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: "Release v1.0.${{ github.run_number }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 📤 Upload Windows Package to Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        files: ./publish/*.msix
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


